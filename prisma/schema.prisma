generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PermissionsOnRoles {
  permissionId String
  roleId       String
  permission   Permission @relation(fields: [permissionId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])

  @@id([permissionId, roleId])
}

model RolesOnUsers {
  userId Int
  roleId String
  role   Role   @relation(fields: [roleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
}

model Permission {
  id    String               @id @default(uuid())
  name  String
  roles PermissionsOnRoles[]
}

model Role {
  id          String               @id @default(uuid())
  name        String
  userId      Int?
  default     Boolean              @default(false)
  permissions PermissionsOnRoles[]
  users       RolesOnUsers[]
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  firstName     String
  lastName      String
  passwordHash  String
  openAIModelId String?
  chats         Chat[]
  roles         RolesOnUsers[]
  OpenAIModel   OpenAIModel?   @relation(fields: [openAIModelId], references: [id])
}

model Chat {
  id     String @id @default(uuid())
  model  String
  userId Int?
  User   User?  @relation(fields: [userId], references: [id])
}

model OpenAIModel {
  id       String @id
  object   String
  created  BigInt
  owned_by String
  userIds  User[]
}
